Amabilidade       = p_amab,
Conscienciosidade = p_cons,
Abertura          = p_aber) %>% knitr::kable()
library(tidyverse)
library(psych)
corr.test(big_five$aber,big_five$fluid)
## criar variável fluid representando inteligência fluída correlacionada com aber
big_five$fluid <- 0.4*big_five$aber + sqrt(1-0.4^2)*rnorm(19719)
corr.test(big_five$aber,big_five$fluid)
## criar variável fluid representando inteligência fluída correlacionada com aber
big_five$fluid <- 0.5*big_five$aber + sqrt(1-0.5^2)*rnorm(19719)
corr.test(big_five$aber,big_five$fluid)
corr.test(big_five$neur,big_five$wellb)
## criar variável fluid representando inteligência fluída correlacionada com aber
big_five$fluid <- 0.5*big_five$aber + sqrt(1-(0.5^2))*rnorm(19719)
corr.test(big_five$aber,big_five$fluid)
## criar variável empatia correlacionada com amabilidade
big_five$empa <- 0.45*big_five$amab + sqrt(1-0.45^2)*rnorm(19719)
corr.test(big_five$amab,big_five$wellb)
corr.test(big_five$amab,big_five$amab)
## criar variável empatia correlacionada com amabilidade
big_five$empa <- 0.45*big_five$amab + sqrt(1-0.45^2)*rnorm(19719)
corr.test(big_five$amab,big_five$empa)
corr.test(big_five$amab,big_five$empa)
## criar variável empatia correlacionada com amabilidade
big_five$empa <- 0.60*big_five$amab + sqrt(1-0.60^2)*rnorm(19719)
corr.test(big_five$amab,big_five$empa)
names(big_five)
write.csv2(big_five,"big_five.csv")
glimpse(big_five)
library(tidyverse)
library(psych)
# gerando figuras de correlações entre os itens para explicar análise fatorial
names(big_five) %>% as.data.frame()
corr.test(big_five[,c(9:18,39:48)])
pairs.panels(big_five[,c(9:18,39:48)])
pairs.panels(big_five[1:1000,c(9:18,39:48)],
digits = 1,
method = "pearson",
cex.cor = 3
)
pairs.panels(big_five[1:1000,c(9:18,39:48)],
digits = 1,
method = "pearson",
cex.cor = 5
)
pairs.panels(big_five[1:400,c(9:18,19:28)],
digits = 1,
method = "pearson",
cex.cor = 5
)
pairs.panels(big_five[1:400,c(9:18,19:28)],
digits = 1,
method = "pearson",
cex.cor = 8
)
pairs.panels(big_five[1:400,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 8
)
pairs.panels(big_five[1:400,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 8,
smoother = TRUE
)
pairs.panels(big_five[1:400,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 8,
density = FALSE,
ellipses = FALSE,
show.points = FALSE
)
pairs.panels(big_five[1:400,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 8,
density = FALSE,
ellipses = FALSE,
show.points = FALSE,stars = TRUE
)
pairs.panels(big_five[1:400,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 8,
density = FALSE,
ellipses = FALSE,
show.points = FALSE
)
pairs.panels(big_five[1:400,c(59,60)],
digits = 2,
method = "pearson",
cex.cor = 8,
)
pairs.panels(big_five[1:400,c(59,60)],
digits = 2,
method = "pearson",
cex.cor = 3,
)
pairs.panels(big_five[1:400,c(59,60)],
digits = 2,
method = "pearson",
cex.cor = 0,5,
)
pairs.panels(big_five[1:400,c(59,60)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
pairs.panels(big_five[1:400,c(60,61)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
pairs.panels(big_five[1:400,c(59,67)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# gerando figuras de correlações entre os itens para explicar análise fatorial
names(big_five) %>% as.data.frame()
# Correlação negativa
pairs.panels(big_five[1:400,c(67,68)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação negativa
pairs.panels(big_five[1:400,c(59,68)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação negativa
pairs.panels(big_five[1:400,c(60,67)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação negativa
pairs.panels(big_five[1:400,c(59,68)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# gerando figuras de correlações entre os itens para explicar análise fatorial
names(big_five) %>% as.data.frame()
# Correlação negativa
pairs.panels(big_five[1:400,c(64,60)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação negativa
pairs.panels(big_five[1:400,c(59,62)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação neutra
pairs.panels(big_five[1:400,c(59,70)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
library(tidyverse)
library(psych)
big_five500 <- sample(big_five, 500, replace = FALSE)
glimpse(big_five)
sample(big_five, 500, replace = FALSE)
big_five[sample(nrow(big_five), 500), ]
big_five500 <- big_five[sample(nrow(big_five), 500), ]
# Amostragem de 500 sujeitos para utilização em aula
big_five500 <- big_five[sample(nrow(big_five), 500), ]
write.csv2(big_five500,"big_five500.csv")
### usei recode para colocar os itens negativos contrários aos positivos.
recode(big_five[ ,c("E2","E4","E6","E8","E10",
"N2","N4",
"A3","A5","A7",
"C2","C4","C6","C8",
"O2","O4","O6")]) <- c(1~5,2~4,3~3,4~2,5~1)
# Amostragem de 500 sujeitos para utilização em aula
big_five500 <- big_five[sample(nrow(big_five), 500), ]
write.csv2(big_five500,"big_five500.csv")
### usei recode para colocar os itens negativos contrários aos positivos.
expss::recode(big_five[ ,c("E2","E4","E6","E8","E10",
"N2","N4",
"A3","A5","A7",
"C2","C4","C6","C8",
"O2","O4","O6")]) <- c(1~5,2~4,3~3,4~2,5~1)
write.csv2(big_five,"big_five.csv")
# Amostragem de 500 sujeitos para utilização em aula
big_five500 <- big_five[sample(nrow(big_five), 500), ]
write.csv2(big_five500,"big_five500.csv")
library(tidyverse)
library(psych)
pairs.panels(big_five500[,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 4,
density = FALSE,
ellipses = FALSE,
show.points = FALSE
)
pairs.panels(big_five500[,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 4,
density = FALSE,
ellipses = FALSE,
show.points = FALSE
)
# Correlação positiva
pairs.panels(big_five[1:400,c(59,67)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação negativa
pairs.panels(big_five[1:400,c(59,62)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação neutra
pairs.panels(big_five[1:400,c(59,70)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
pairs.panels(big_five500[,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 4,
density = FALSE,
ellipses = FALSE,
show.points = FALSE
)
# Correlação positiva
pairs.panels(big_five500[,c(59,67)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação negativa
pairs.panels(big_five500[,c(59,62)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação neutra
pairs.panels(big_five500[,c(59,70)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# gerando figuras de correlações entre os itens para explicar análise fatorial
names(big_five) %>% as.data.frame()
# Correlação positiva
pairs.panels(big_five500[,c(59,68)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação positiva
pairs.panels(big_five500[,c(59,60)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação positiva
pairs.panels(big_five500[,c(60,61)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação positiva
pairs.panels(big_five500[,c(60,62)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação positiva
pairs.panels(big_five500[,c(60,70)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação positiva
pairs.panels(big_five500[,c(68,70)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação positiva
pairs.panels(big_five500[,c(60,70)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação negativa
pairs.panels(big_five500[,c(59,62)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação negativa
pairs.panels(big_five500[,c(60,70)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação positiva
pairs.panels(big_five500[,c(59,67)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação neutra
pairs.panels(big_five500[,c(59,70)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Matriz de correlações
pairs.panels(big_five500[,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 4,
density = FALSE,
ellipses = FALSE,
show.points = FALSE
)
big_five %>% select(9:58) %>% KMO()
big_five500 %>% select(9:58) %>% KMO()
big_five500 %>% select(9:58) %>% bartlett.test()
# Matriz de correlações
pairs.panels(big_five[,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 4,
density = FALSE,
ellipses = FALSE,
show.points = FALSE
)
# Correlação positiva
pairs.panels(big_five[,c(59,67)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação negativa
pairs.panels(big_five[,c(60,70)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Correlação neutra
pairs.panels(big_five[,c(59,70)],
digits = 2,
method = "pearson",
cex.cor = 1,
)
# Matriz de correlações
pairs.panels(big_five[,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 4,
density = FALSE,
ellipses = FALSE,
show.points = FALSE
)
scree_plot$fv
scree_plot
big_five %>% select(9:58) %>% scree(pc = FALSE)
fa_bf
# scree-plot
scree_plot <- big_five %>% select(9:58) %>% scree(pc = FALSE)
scree_plot$fv
# análise paralela
parallel <- big_five %>%
select(9:58) %>%
fa.parallel(fm="gls",n.obs=1000, fa="fa", cor="poly")
parallel$fa.values
parallel$fa.sim
# AFE
fa_bf <-                     # salve as informações num objeto chamado fa_bf
big_five %>%        # pegue o dataframe big_five
select(9:58) %>%    # selecione as colunas de 9 a 58 (itens do teste)
fa(nfactors = 5,    # faça uma análise fatorial, extraindo cinco fatores
cor = "cor",        # utilize correlações para montar uma matriz
fm = "gls",         # utilize o método gls para extrair os fatores
rotate = "geominQ") # utilize o método "geominQ" para rotacionar os fatores
fa_bf
fa_bf$loadings
?fa_bf$loadings
corr.test(big_five[,59:63],big_five[,67:71])$r %>% pander::pander()
corr.test(big_five[,59:63],big_five[,64:66])$r %>% pander::pander()
corr.test(big_five[,59:63],big_five[,64:66])$stars %>% pander::pander()
## extr
alfa_extr <- big_five %>% select( 9:18) %>% psych::alpha()
alfa_extr
# Coeficiente Alfa de Cronbach
# Os códigos dizem o seguinte: pegue o dataframe big_five, selecione as colunas de 9 a 18 (correspondentes aos itens de extroversão) e calcule o coeficiente alfa. Em todos os casos esse cálculo deve ser salvo em um objeto do R, cujo nome foi criado (alfa_extr, alfa_neur, etc... )
?alpha
## extr
alfa_extr <- big_five %>% select( 9:18) %>% psych::alpha(keys = c(1,-1,1,-1,1,-1,1,-1,1,-1))
alfa_extr
## neur
alfa_neur <- big_five %>% select(19:28) %>% psych::alpha(keys = c(1,-1,1,-1,1,1,1,1,1,1))
alfa_neur
## amab
alfa_amab <- big_five %>% select(29:38) %>% psych::alpha(keys = c(1,1,-1,1,-1,1,-1,1,1,1))
alfa_amab
## cons
alfa_cons <- big_five %>% select(39:48) %>% psych::alpha(1,-1,1,-1,1,-1,1,-1,1,1)
alfa_cons
## cons
alfa_cons <- big_five %>% select(39:48) %>% psych::alpha(keys = c(1,-1,1,-1,1,-1,1,-1,1,1))
alfa_cons
## cons
alfa_cons <- big_five %>% select(39:48) %>% psych::alpha(keys = c(1,-1,1,-1,1,-1,1,-1,1,1))
alfa_cons
## aber
alfa_aber <- big_five %>% select(49:58) %>% psych::alpha(keys = c(1,-1,1,-1,1,-1,1,1,1,1))
alfa_aber
alfa_extr$total$std.alpha
alfa_neur$total$std.alpha
alfa_amab$total$std.alpha
alfa_cons$total$std.alpha
alfa_aber$total$std.alpha
data.frame(Fatores = c("Extroversão",
"Neuroticismo",
"Amabilidade",
"Conscienciosidade",
"Abertura"),
"Alfa de Cronbach" = c(round(alfa_extr$total$std.alpha, digits = 3),
round(alfa_neur$total$std.alpha, digits = 3),
round(alfa_amab$total$std.alpha, digits = 3),
round(alfa_cons$total$std.alpha, digits = 3),
round(alfa_aber$total$std.alpha, digits = 3))) %>% knitr::kable()
## Coeficiente Ômega de McDonald
?ômega
## Coeficiente Ômega de McDonald
?omega()
omega_extr <- big_five %>% select( 9:18) %>% omega(poly=TRUE,keys = c(1,-1,1,-1,1,-1,1,-1,1,-1))
omega_neur <- big_five %>% select(19:28) %>% omega(poly=TRUE,keys = c(1,-1,1,-1,1,1,1,1,1,1))
omega_amab <- big_five %>% select(29:38) %>% omega(poly=TRUE,keys = c(1,1,-1,1,-1,1,-1,1,1,1))
omega_cons <- big_five %>% select(39:48) %>% omega(poly=TRUE,keys = c(1,-1,1,-1,1,-1,1,-1,1,1))
omega_aber <- big_five %>% select(49:58) %>% omega(poly=TRUE,keys = c(1,-1,1,-1,1,-1,1,1,1,1))
# para obter os resultados
omega_extr$omega.tot
omega_neur$omega.tot
omega_amab$omega.tot
omega_cons$omega.tot
omega_aber$omega.tot
# para apresentar os resultados numa tabela
data.frame(Fatores = c("Extroversão",
"Neuroticismo",
"Amabilidade",
"Conscienciosidade",
"Abertura"),
"Ômega de McDonald" = c(round(omega_extr$omega.tot, digits = 3),
round(omega_neur$omega.tot, digits = 3),
round(omega_amab$omega.tot, digits = 3),
round(omega_cons$omega.tot, digits = 3),
round(omega_aber$omega.tot, digits = 3))) %>% knitr::kable()
library(tidyverse)
library(psych)
library(tidyverse)
library(psych)
pairs.panels(big_five500[,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 4,
density = FALSE,
ellipses = FALSE,
show.points = FALSE
)
pairs.panels(big_five500[,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 4,
density = FALSE,
ellipses = FALSE,
show.points = FALSE
)
pairs.panels(big_five500[,c(9:18,19:28)],
digits = 2,
method = "pearson",
cex.cor = 4,
density = FALSE,
ellipses = FALSE,
show.points = FALSE
)
write.csv2(big_five500,"big_five500.csv")
# salvar em banco de dados
write.csv2(bai_bdi,"bai_bdi.csv")
names(rwas)
library(tidyverse)
library(psych)
fa_bf
# com base na análise fatorial geral, selecionar os cinco itens de cada fator com cargas mais elevadas.
names(big_five) %>% as.data.frame()
big_five %>%
select(c(32:35,37,39,43:45,47,9,10,12,13,15,19,24:27,49,50,58,53,56)) %>%
fa(nfactors = 5,
cor = "poly",
fm = "uls",
rotate = "oblimin")
